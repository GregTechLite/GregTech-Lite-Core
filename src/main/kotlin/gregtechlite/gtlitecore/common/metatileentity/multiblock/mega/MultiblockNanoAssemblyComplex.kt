package gregtechlite.gtlitecore.common.metatileentity.multiblock.mega

import gregtech.api.metatileentity.interfaces.IGregTechTileEntity
import gregtech.api.metatileentity.multiblock.IMultiblockPart
import gregtech.api.metatileentity.multiblock.MultiblockAbility.INPUT_ENERGY
import gregtech.api.metatileentity.multiblock.MultiblockAbility.INPUT_LASER
import gregtech.api.metatileentity.multiblock.RecipeMapMultiblockController
import gregtech.api.pattern.BlockPattern
import gregtech.api.pattern.FactoryBlockPattern
import gregtech.api.recipes.RecipeMaps.ASSEMBLY_LINE_RECIPES
import gregtech.client.renderer.ICubeRenderer
import gregtechlite.gtlitecore.client.renderer.texture.GTLiteOverlays
import gregtechlite.gtlitecore.common.block.adapter.GTGlassCasing
import gregtechlite.gtlitecore.common.block.variant.ActiveUniqueCasing
import gregtechlite.gtlitecore.common.block.variant.GlassCasing
import gregtechlite.gtlitecore.common.block.variant.MetalCasing
import gregtechlite.gtlitecore.common.block.variant.MultiblockCasing
import net.minecraft.util.ResourceLocation

/**
 * allowed laser, ignore max recipe tier, ignore ordered inputs.
 *
 * large ass     iv
 * ass line      luv
 * circ ass line luv
 * coal          uv
 * space ass MK3 uiv
 *
 * uxv stage, another prepare works for supracausal circuit
 * another choice: ignored space ass mk3, put it to uhv or uev? (strange...
 */
class MultiblockNanoAssemblyComplex(id: ResourceLocation) : RecipeMapMultiblockController(id, ASSEMBLY_LINE_RECIPES)
{

    companion object
    {
        private val casingState = MetalCasing.LAFIUM.state
        private val secondCasingState = ActiveUniqueCasing.NANO_PRECISE_ASSEMBLY_UNIT.state
        private val thirdCasingState = MultiblockCasing.NANITE_TRANSMISSION_CASING.state
        private val gearboxCasingState = ActiveUniqueCasing.NANITE_CONTROL_CASING.state
        private val coilState = MultiblockCasing.PARTICLE_EXCITATION_WIRE_COIL.state
        private val glassState = GTGlassCasing.FUSION_GLASS.state
        private val secondGlassState = GlassCasing.QUANTUM.state
    }

    override fun createMetaTileEntity(tileEntity: IGregTechTileEntity) = MultiblockNanoAssemblyComplex(metaTileEntityId)

    // @formatter:off

    override fun createStructurePattern(): BlockPattern = FactoryBlockPattern.start()
        .aisle("        E   E        ", "       GCG GCG       ", "       FDF FDF       ", "     AAAAA AAAAA     ", "     FDF     FDF     ", "   AFGCG     GCGFA   ", "   ADCE       ECDA   ", " GFAFG         GFAFG ", "ECDA     GGG     ADCE", " GFA    GAAAG    AFG ", "        GAAAG        ", " GFA    GAAAG    AFG ", "ECDA     GGG     ADCE", " GFAFG         GFAFG ", "   ADCE       ECDA   ", "   AFGCG     GCGFA   ", "     FDF     FDF     ", "     AAAAA AAAAA     ", "       FDF FDF       ", "       GCG GCG       ", "        E   E        ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("        E   E        ", "       GCG GCG       ", "       FDF FDF       ", "     AAAAA AAAAA     ", "     FDF     FDF     ", "   AFGCG     GCGFA   ", "   ADCE       ECDA   ", " GFAFG         GFAFG ", "ECDA     GGG     ADCE", " GFA    GHHHG    AFG ", "        GHCHG        ", " GFA    GHHHG    AFG ", "ECDA     GGG     ADCE", " GFAFG         GFAFG ", "   ADCE       ECDA   ", "   AFGCG     GCGFA   ", "     FDF     FDF     ", "     AAAAA AAAAA     ", "       FDF FDF       ", "       GCG GCG       ", "        E   E        ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("        E   E        ", "       GCG GCG       ", "       FDF FDF       ", "     AAAAA AAAAA     ", "     FDF     FDF     ", "   AFGCG     GCGFA   ", "   ADCE       ECDA   ", " GFAFG         GFAFG ", "ECDA     GGG     ADCE", " GFA    GHHHG    AFG ", "        GHCHG        ", " GFA    GHHHG    AFG ", "ECDA     GGG     ADCE", " GFAFG         GFAFG ", "   ADCE       ECDA   ", "   AFGCG     GCGFA   ", "     FDF     FDF     ", "     AAAAA AAAAA     ", "       FDF FDF       ", "       GCG GCG       ", "        E   E        ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("        E   E        ", "       GCG GCG       ", "       FDF FDF       ", "     AAAAA AAAAA     ", "     FDF     FDF     ", "   AFGCG     GCGFA   ", "   ADCE       ECDA   ", " GFAFG         GFAFG ", "ECDA     GGG     ADCE", " GFA    GHHHG    AFG ", "        GHCHG        ", " GFA    GHHHG    AFG ", "ECDA     GGG     ADCE", " GFAFG         GFAFG ", "   ADCE       ECDA   ", "   AFGCG     GCGFA   ", "     FDF     FDF     ", "     AAAAA AAAAA     ", "       FDF FDF       ", "       GCG GCG       ", "        E   E        ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("        E   E        ", "       GCG GCG       ", "       FDF FDF       ", "     AAAAA AAAAA     ", "     FDF     FDF     ", "   AFGCG     GCGFA   ", "   ADCE       ECDA   ", " GFAFG         GFAFG ", "ECDA     GGG     ADCE", " GFA    GHHHG    AFG ", "        GHCHG        ", " GFA    GHHHG    AFG ", "ECDA     GGG     ADCE", " GFAFG         GFAFG ", "   ADCE       ECDA   ", "   AFGCG     GCGFA   ", "     FDF     FDF     ", "     AAAAA AAAAA     ", "       FDF FDF       ", "       GCG GCG       ", "        E   E        ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("        E   E        ", "       GCG GCG       ", "       FDF FDF       ", "     AAAAA AAAAA     ", "     FDF     FDF     ", "   AFGCG     GCGFA   ", "   ADCE       ECDA   ", " GFAFG         GFAFG ", "ECDA     GGG     ADCE", " GFA    GHHHG    AFG ", "        GHCHG        ", " GFA    GHHHG    AFG ", "ECDA     GGG     ADCE", " GFAFG         GFAFG ", "   ADCE       ECDA   ", "   AFGCG     GCGFA   ", "     FDF     FDF     ", "     AAAAA AAAAA     ", "       FDF FDF       ", "       GCG GCG       ", "        E   E        ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("        E   E        ", "       GCG GCG       ", "       FDF FDF       ", "     AAAAA AAAAA     ", "     FDF     FDF     ", "   AFGCG     GCGFA   ", "   ADCE       ECDA   ", " GFAFG         GFAFG ", "ECDA     GGG     ADCE", " GFA    GHHHG    AFG ", "        GHCHG        ", " GFA    GHHHG    AFG ", "ECDA     GGG     ADCE", " GFAFG         GFAFG ", "   ADCE       ECDA   ", "   AFGCG     GCGFA   ", "     FDF     FDF     ", "     AAAAA AAAAA     ", "       FDF FDF       ", "       GCG GCG       ", "        E   E        ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("        E   E        ", "       GCG GCG       ", "       FDF FDF       ", "     AAAAA AAAAA     ", "     FDF     FDF     ", "   AFGCG     GCGFA   ", "   ADCE       ECDA   ", " GFAFG         GFAFG ", "ECDA     GGG     ADCE", " GFA    GHHHG    AFG ", "        GHCHG        ", " GFA    GHHHG    AFG ", "ECDA     GGG     ADCE", " GFAFG         GFAFG ", "   ADCE       ECDA   ", "   AFGCG     GCGFA   ", "     FDF     FDF     ", "     AAAAA AAAAA     ", "       FDF FDF       ", "       GCG GCG       ", "        E   E        ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("        E   E        ", "       GCG GCG       ", "       FDF FDF       ", "     AAAAA AAAAA     ", "     FDF     FDF     ", "   AFGCG     GCGFA   ", "   ADCE       ECDA   ", " GFAFG         GFAFG ", "ECDA     GGG     ADCE", " GFA    GHHHG    AFG ", "        GHCHG        ", " GFA    GHHHG    AFG ", "ECDA     GGG     ADCE", " GFAFG         GFAFG ", "   ADCE       ECDA   ", "   AFGCG     GCGFA   ", "     FDF     FDF     ", "     AAAAA AAAAA     ", "       FDF FDF       ", "       GCG GCG       ", "        E   E        ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("        E   E        ", "       GCG GCG       ", "       FDF FDF       ", "     AAAAA AAAAA     ", "     FDF     FDF     ", "   AFGCG     GCGFA   ", "   ADCE       ECDA   ", " GFAFG         GFAFG ", "ECDA     GGG     ADCE", " GFA    GHHHG    AFG ", "        GHCHG        ", " GFA    GHHHG    AFG ", "ECDA     GGG     ADCE", " GFAFG         GFAFG ", "   ADCE       ECDA   ", "   AFGCG     GCGFA   ", "     FDF     FDF     ", "     AAAAA AAAAA     ", "       FDF FDF       ", "       GCG GCG       ", "        E   E        ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("        E   E        ", "       GCG GCG       ", "       FDF FDF       ", "     AAAAA AAAAA     ", "     FDF     FDF     ", "   AFGCG     GCGFA   ", "   ADCE       ECDA   ", " GFAFG         GFAFG ", "ECDA     GGG     ADCE", " GFA    GHHHG    AFG ", "        GHCHG        ", " GFA    GHHHG    AFG ", "ECDA     GGG     ADCE", " GFAFG         GFAFG ", "   ADCE       ECDA   ", "   AFGCG     GCGFA   ", "     FDF     FDF     ", "     AAAAA AAAAA     ", "       FDF FDF       ", "       GCG GCG       ", "        E   E        ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("        E   E        ", "       GCG GCG       ", "       FDF FDF       ", "     AAAAA AAAAA     ", "     FDF     FDF     ", "   AFGCG     GCGFA   ", "   ADCE       ECDA   ", " GFAFG         GFAFG ", "ECDA     GGG     ADCE", " GFA    GHHHG    AFG ", "        GHCHG        ", " GFA    GHHHG    AFG ", "ECDA     GGG     ADCE", " GFAFG         GFAFG ", "   ADCE       ECDA   ", "   AFGCG     GCGFA   ", "     FDF     FDF     ", "     AAAAA AAAAA     ", "       FDF FDF       ", "       GCG GCG       ", "        E   E        ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("        E   E        ", "       GCG GCG       ", "       FDF FDF       ", "     AAAAA AAAAA     ", "     FDF     FDF     ", "   AFGCG     GCGFA   ", "   ADCE       ECDA   ", " GFAFG         GFAFG ", "ECDA     GGG     ADCE", " GFA    GHHHG    AFG ", "        GHCHG        ", " GFA    GHHHG    AFG ", "ECDA     GGG     ADCE", " GFAFG         GFAFG ", "   ADCE       ECDA   ", "   AFGCG     GCGFA   ", "     FDF     FDF     ", "     AAAAA AAAAA     ", "       FDF FDF       ", "       GCG GCG       ", "        E   E        ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("        E   E        ", "       GCG GCG       ", "       FDF FDF       ", "     AAAAA AAAAA     ", "     FDF     FDF     ", "   AFGCG     GCGFA   ", "   ADCE       ECDA   ", " GFAFG         GFAFG ", "ECDA     GGG     ADCE", " GFA    GHHHG    AFG ", "        GHCHG        ", " GFA    GHHHG    AFG ", "ECDA     GGG     ADCE", " GFAFG         GFAFG ", "   ADCE       ECDA   ", "   AFGCG     GCGFA   ", "     FDF     FDF     ", "     AAAAA AAAAA     ", "       FDF FDF       ", "       GCG GCG       ", "        E   E        ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("        E   E        ", "       GCG GCG       ", "       FDF FDF       ", "     AAAAA AAAAA     ", "     FDF     FDF     ", "   AFGCG     GCGFA   ", "   ADCE       ECDA   ", " GFAFG         GFAFG ", "ECDA     GGG     ADCE", " GFA    GHHHG    AFG ", "        GHCHG        ", " GFA    GHHHG    AFG ", "ECDA     GGG     ADCE", " GFAFG         GFAFG ", "   ADCE       ECDA   ", "   AFGCG     GCGFA   ", "     FDF     FDF     ", "     AAAAA AAAAA     ", "       FDF FDF       ", "       GCG GCG       ", "        E   E        ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "         QQQ         ", "        QHHHQ        ", "        QHCHQ        ", "        QHHHQ        ", "         QQQ         ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ", "                     ")
        .aisle("        E   E        ", "       GCG GCG       ", "       FDF FDF       ", "     AAAAA AAAAA     ", "     FDF     FDF     ", "   AFGCG     GCGFA   ", "   ADCE       ECDA   ", " GFAFG         GFAFG ", "ECDA     GGG     ADCE", " GFA    GAAAG    AFG ", "        GASAG        ", " GFA    GAAAG    AFG ", "ECDA     GGG     ADCE", " GFAFG         GFAFG ", "   ADCE       ECDA   ", "   AFGCG     GCGFA   ", "     FDF     FDF     ", "     AAAAA AAAAA     ", "       FDF FDF       ", "       GCG GCG       ", "        E   E        ")
        .where('S', selfPredicate())
        .where('A', states(casingState)
            .setMinGlobalLimited(600)
            .or(autoAbilities(false, false, true, true, true, false, false)))
        .where('E', states(casingState)
            .or(abilities(INPUT_ENERGY))
            .or(abilities(INPUT_LASER)))
        .where('G', states(secondCasingState))
        .where('C', states(thirdCasingState))
        .where('F', states(glassState))
        .where('Q', states(secondGlassState))
        .where('D', states(gearboxCasingState))
        .where('H', states(coilState))
        .where(' ', any())
        .build()

    // @formatter:on

    override fun getBaseTexture(sourcePart: IMultiblockPart?): ICubeRenderer = GTLiteOverlays.LAFIUM_CASING

    override fun getFrontOverlay(): ICubeRenderer = GTLiteOverlays.NANO_ASSEMBLY_COMPLEX_OVERLAY

    override fun hasMaintenanceMechanics(): Boolean = false

}